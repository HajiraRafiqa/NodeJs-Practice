Node.js is a very powerful JavaScript-based platform built on Google Chrome's JavaScript V8 Engine.
It is used to develop I/O intensive web applications like video streaming sites, single-page applications, and other web applications.
Node.js is open source, completely free, and used by thousands of developers around the world.
Node.js is a server-side platform built on Google Chrome's JavaScript Engine 

Node.js was developed by Ryan Dahl in 2009 and its latest version is v0.10.36.


Where to Use Node.js?
Following are the areas where Node.js is proving itself as a perfect technology partner.
I/O bound Applications
Data Streaming Applications
Data Intensive Real-time Applications (DIRT)
JSON APIs based Applications
Single Page Applications

Where Not to Use Node.js?
It is not advisable to use Node.js for CPU intensive applications.


REPL stands for Read Eval Print Loop and it represents a computer environment like a Windows console or Unix/Linux shell 
where a command is entered and the system responds with an output in an interactive mode. 
Node.js or Node comes bundled with a REPL environment. It performs the following tasks −

Read − Reads user's input, parses the input into JavaScript data-structure, and stores in memory.

Eval − Takes and evaluates the data structure.

Print − Prints the result.

Loop − Loops the above command until the user presses ctrl-c twice.

The REPL feature of Node is very useful in experimenting with Node.js codes and to debug JavaScript codes.

npm - its a package maneger for your code.
Modules- reuseable code.
Packages- set of modules.
package.json- contains meta data


NPM comes bundled with Node.js
To verify the same, open console and type the following command and see the result −
npm --version

update it to the latest version -
sudo npm install npm -g

Installing Modules using NPM -
npm install <Module Name>

example - npm install express

global installation - 
npm install express -g

command to check all the modules installed globally-
npm ls -g


Attributes of Package.json

-name − name of the package
-version − version of the package
-description − description of the package
-homepage − homepage of the package
-author − author of the package
-contributors − name of the contributors to the package
-dependencies − list of dependencies. NPM automatically installs all the dependencies mentioned here in the node_module folder of the package.
-repository − repository type and URL of the package
-main − entry point of the package
-keywords − keywords

Uninstalling a Module-
npm uninstall express

Updating a Module-
npm update express

Search a Module -
npm search express  // express- it is a nodejs web app framework that provides feature for web n moblie apps 



function statements -- 
function sayHi()
{
  console.log("hi");
}
sayHi();

function expression --
var sayHi = funciton(){}
{
  console.log("hi");
}
sayHi();

require -- used to include modules that exists in different modules. 

modules -- they are blocks of code or single or collection of files used for specific functions.

EventEmitter Class --
When an EventEmitter instance faces any error, it emits an 'error' event. 
When a new listener is added, 'newListener' event is fired and when a listener is removed, 'removeListener' event is fired.

EventEmitter provides multiple properties like on and emit. on property is used to bind a function with the event and emit is used to fire an event.
EventEmitter -- it is used to handle events.
emit-- function of EventEmiter object.

Node.js fs.unlink() Method
The fs.unlink() method is used to remove a file or symbolic link from the filesystem. 
This function does not work on directories, therefore it is recommended to use fs.rmdir() to remove a directory.

fs.mkdirSync --- it is used to make a directory. 

buffers --- temporary storage spot for a chunck of data that is being transfered from one place to another 
the buffer is filled with data. then it is passes along 
it is used to transfer small chuncks of data at a time.

Node provides Buffer class which provides instances to store raw data similar to an array of integers 
but corresponds to a raw memory allocation outside the V8 heap.
Buffer class is a global class that can be accessed in an application without importing the buffer module.

Convert Buffer to JSON
Following is the syntax of the method to convert a Node Buffer into JSON object −
buf.toJSON()

streams - there are 3 types:
readable - it allows nodejs to read from a stream
writeable - it allows nodejs to write from a stream
duplex - it allows nodejs to read and write from a stream
